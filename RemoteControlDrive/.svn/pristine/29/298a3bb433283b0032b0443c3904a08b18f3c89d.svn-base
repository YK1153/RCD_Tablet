using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Reflection;
using System.Linq;
using RcdCmn;
using static RcdDao.DaoCommon;
using RcdDao.Attributes;


namespace RcdDao
{
    public class MPlantDao
    {
        #region ### クラス変数 ###

        AppLog LOGGER = AppLog.GetInstance();
        DaoCommon m_daoCommon = GetInstance();

        #endregion

        #region ### データ操作 ###
        /// <summary>
        /// 車両仕様情報取得
        /// </summary>
        /// <returns>車両仕様リスト</returns>
        public List<Plant> GetAllInfo()
        {
            LOGGER.Debug($"{MethodBase.GetCurrentMethod().Name} start");

            try
            {
                using (SqlHelper helper = m_daoCommon.getSqlHelper())
                {
                    string cmd = @"
                        SELECT
		                    sid
		                    , SpecCd
		                    , GearRate
                            , WheelBase
                            , WidthDistance
                            , ForwardDistance
                            , AreaAdjust
	                    FROM
		                    dbo.M_CAR_SPEC
	                    WHERE
		                    DelFlg = 0;
                    ";

                    DataTable dataTable = helper.Execute(cmd, CommandType.Text);

                    return m_daoCommon.ConvertToListOf<Plant>(dataTable);
                }
            }
            finally
            {
                LOGGER.Debug($"{MethodBase.GetCurrentMethod().Name} end");
            }
        }

        public int Add(Plant plant)
        {
            LOGGER.Debug($"{MethodBase.GetCurrentMethod().Name} start");

            try
            {
                using (SqlHelper helper = m_daoCommon.getSqlHelper())
                {
                    string cmd = @"
                        INSERT M_CAR_SPEC (
                            Created
                            , Updated
                            , DelFlg
                            , SpecCd
                            , GearRate
                            , WheelBase
                            , WidthDistance
                            , ForwardDistance
                            , AreaAdjust
                        ) VALUES (
                            GETDATE()
                            , GETDATE()
                            , 0
                            , @SpecCd
                            , @GearRate
                            , @WheelBase
                            , @WidthDistance
                            , @ForwardDistance
                            , @AreaAdjust

                        );
                    ";

                    SqlParameter[] sqlParameters = m_daoCommon.ConvertToSqlParams(MethodBase.GetCurrentMethod().Name, plant);
                    int effectedRowCount = helper.ExecuteNonQuery(cmd, CommandType.Text, sqlParameters);

                    return effectedRowCount;
                }
            }
            finally
            {
                LOGGER.Debug($"{MethodBase.GetCurrentMethod().Name} end");
            }
        }

        public int Delete(Plant plant)
        {
            LOGGER.Debug($"{MethodBase.GetCurrentMethod().Name} start");

            try
            {
                using (SqlHelper helper = m_daoCommon.getSqlHelper())
                {
                    string cmd = @"
                        UPDATE 
                            M_CAR_SPEC 
                        SET
                            Updated = GETDATE()
                            , DelFlg = 1
                        WHERE
                            sid = @SID;
                    ";

                    SqlParameter[] sqlParameters = m_daoCommon.ConvertToSqlParams(MethodBase.GetCurrentMethod().Name, carSpec);

                    int effectedRowCount = helper.ExecuteNonQuery(cmd, CommandType.Text, sqlParameters);

                    return effectedRowCount;
                }
            }
            finally
            {
                LOGGER.Debug($"{MethodBase.GetCurrentMethod().Name} end");
            }
        }

        public int Update(Plant plant)
        {
            LOGGER.Debug($"{MethodBase.GetCurrentMethod().Name} start");

            try
            {
                using (SqlHelper helper = m_daoCommon.getSqlHelper())
                {
                    string cmd = @"
                        UPDATE 
                            M_CAR_SPEC
                        SET
                            Updated = GETDATE()
                            , SpecCd = @SpecCd
                            , GearRate = @GearRate
                            , WheelBase = @WheelBase
                            , WidthDistance = @WidthDistance
                            , ForwardDistance = @ForwardDistance
                            , AreaAdjust = @AreaAdjust

                        WHERE
                            sid = @SID;
                    ";

                    SqlParameter[] sqlParameters = m_daoCommon.ConvertToSqlParams(MethodBase.GetCurrentMethod().Name, plant);

                    int effectedRowCount = helper.ExecuteNonQuery(cmd, CommandType.Text, sqlParameters);

                    return effectedRowCount;
                }
            }
            finally
            {
                LOGGER.Debug($"{MethodBase.GetCurrentMethod().Name} end");
            }
        }
        #endregion

        #region ### 結果セット ###
        public class Plant : Result
        {
            public Plant() { }

            [SqlParam(queryNames: new string[] { "Delete", "Update" })]
            public int? ID { get; set; }

            [UserInput]
            [SqlParam(queryNames: new string[] { "Add", "Update" })]
            [Pattern("[a-zA-Z0-9]{1,5}", "1~5桁の英数字")]
            public string SpecCd { get; set; }

        }

        #endregion

    }
}
