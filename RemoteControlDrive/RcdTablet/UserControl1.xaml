<UserControl x:Class="RcdTablet.UserControl1"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RcdTablet"
             mc:Ignorable="d" 
             d:DesignHeight="100" Width="100">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition Height="48*"/>
            <RowDefinition Height="53*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="9*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <!--<Button HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Click="UserControl1_Click" Margin="0,0,0,5" Name="circleButton"  >-->
        <!--<Button HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Click="UserControl1_Click" Margin="0,0,0,5" Name="circleButton"  >-->
        <!--<Button HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Click="UserControl1_Click" Margin="0,0,0,5" Name="circleButton"  >-->
        <Image HorizontalAlignment="Left" Height="392" Margin="-10,-10,-420,-282" VerticalAlignment="Top" Width="530" Source="./Resources/squeareblack.png" Grid.RowSpan="3" Grid.ColumnSpan="2" Stretch="Fill"/>
        <!--<Button HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Click="UserControl1_Click" Margin="0,0,0,5" Name="circleButton"  >-->
        <Button HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0,0,0,5" x:Name="circleButton" Grid.ColumnSpan="2" Grid.RowSpan="3" BorderBrush="{x:Null}" Foreground="{x:Null}" Style="{DynamicResource ButtonStyle1}"  >
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
                </Style>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>-->
                                        <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <Button.Background>
                <ImageBrush ImageSource="pack://siteoforigin:,,,/resources/強制完了_押下前.png"/>
            </Button.Background>

            <!--<Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="9*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="UserControlImage" Source="./Resources/強制完了_押下前.png" Stretch="Uniform" Margin="-3" Grid.ColumnSpan="2"/>
                    </Grid>
                </ControlTemplate>
            </Button.Template>-->
        </Button>

    </Grid>
</UserControl>
